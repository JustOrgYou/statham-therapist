name: CI Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  static_analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: "[Backend] Install"
        working-directory: ./backend
        run: poetry install

      - name: "[Backend] Run flake8"
        working-directory: ./backend
        run: poetry run flake8

      - name: "[Backend] Run unit tests"
        working-directory: ./backend
        run: poetry run pytest tests/ --cov=app --cov-report=term --cov-fail-under=85

      - name: "[Frontend] Install"
        working-directory: ./frontend
        run: poetry install

      - name: "[Frontend] Run flake8"
        working-directory: ./frontend
        run: poetry run flake8

      - name: "[Frontend] Run unit tests"
        working-directory: ./frontend
        run: poetry run pytest tests/ --cov=. --cov-report=term --cov-fail-under=85

  sonarqube_analysis:
    runs-on: ubuntu-latest
    needs: static_analysis
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: "[Backend] Install"
        working-directory: ./backend
        run: poetry install

      - name: "[Backend] Coverage reports"
        working-directory: ./backend
        run: poetry run pytest tests/ --cov=app --cov-report=xml && sed -i "s|$PWD|./backend|g" coverage.xml

      - name: "[Frontend] Install"
        working-directory: ./frontend
        run: poetry install

      - name: "[Frontend] Coverage reports"
        working-directory: ./frontend
        run: poetry run pytest tests/ --cov=. --cov-report=xml && sed -i "s|$PWD|./frontend|g" coverage.xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy:
    needs: sonarqube_analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - uses: matiasnu/github-action-ssh-docker-compose@master
        name: Docker Compose Deploy
        with:
          ssh_host: 121.127.33.62
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh_user: ubuntu

  ui_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install selenium

      - name: Run UI tests
        run: |
          # Integrate Selenium test execution command here.

  performance_testing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Perform performance testing
        run: |
          # Integrate performance testing command here.

  capacity_testing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Capacity Testing
        run: |
          # Integrate k6 capacity testing command here.
